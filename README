#!/bin/bash

# Unpacking JDK tool hangs
#
# https://community.jenkins.io/t/job-stuck-on-unpacking-global-jdk-tool/11272

JENKINS_WAR_VERSION=2.426.2
JENKINS_WAR=jenkins-${JENKINS_WAR_VERSION}.war
PLUGIN_MANAGER_VERSION=2.13.0
PLUGIN_MANAGER_JAR=jenkins-plugin-manager-${PLUGIN_MANAGER_VERSION}.jar

if [ ! -f ../$PLUGIN_MANAGER_JAR ]; then
  wget https://github.com/jenkinsci/plugin-installation-manager-tool/releases/download/${PLUGIN_MANAGER_VERSION}/$PLUGIN_MANAGER_JAR
  mv $PLUGIN_MANAGER_JAR ..
fi
if [ ! -d plugins ]; then
  mkdir plugins
fi
java -jar ../$PLUGIN_MANAGER_JAR --jenkins-version $JENKINS_WAR_VERSION --latest false --plugin-download-directory plugins --plugin-file plugins.txt

if [ ! -f ../$JENKINS_WAR ]; then
  wget https://get.jenkins.io/war-stable/${JENKINS_WAR_VERSION}/jenkins.war
  mv jenkins.war ../$JENKINS_WAR
fi

JENKINS_HOME=. java -jar ../$JENKINS_WAR

exit 0

Groovy system console that I used to explore the behavior of Jenkins core:

URL archive = new URL("https://cdn.azul.com/zulu/bin/zulu17.46.19-ca-fx-jdk17.0.9-linux_x64.tar.gz")
println("URL of archive is " + archive)

TaskListener listener = TaskListener.NULL

File jdk17Dir = new File("/tmp/jdk17.0.9")
println("Java 17 dir is " + jdk17Dir + " and " + (jdk17Dir.exists() ? " exists" : "does not exist"))

FilePath jdk17FilePath = new FilePath(jdk17Dir)
println("Java 17 FilePath is " + jdk17FilePath + " and " + (jdk17FilePath.exists() ? " exists" : "does not exist"))

boolean result = jdk17FilePath.installIfNecessaryFrom(archive, listener, "Installing JDK 17 into " + jdk17Dir)
println("Result of installIfNecessaryFrom is " + result)
